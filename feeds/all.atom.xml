<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hir0C blog</title><link href="blog/" rel="alternate"></link><link href="blog/feeds/all.atom.xml" rel="self"></link><id>blog/</id><updated>2016-03-22T18:34:00+08:00</updated><entry><title>wordpress on nginx 搭建</title><link href="blog/yun-wei/2016-03-22-18-34.html" rel="alternate"></link><updated>2016-03-22T18:34:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-18-34.html</id><summary type="html">&lt;p&gt;&lt;em&gt;内网搞了了bolg，采用了nginx+php+mysql+wordpress。整个过程并不复杂，记录下遇到的问题。&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;1. 安装nginx&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --prefix=/usr/local/nginx --with-zlib --with-pcre=/opt/ftp/http-server/pcre-8.34 --with-http_perl_module --with-http_stub_status_module --with-http_image_filter_module --with-http_gunzip_module --with-http_gzip_static_module
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. php&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --prefix=/usr/local/php &amp;#39;--with-config-file-path=/usr/local/php-5.4.23/etc&amp;#39; &amp;#39;--enable-fpm&amp;#39; &amp;#39;--enable-pcntl&amp;#39; &amp;#39;--enable-shmop&amp;#39; &amp;#39;--enable-sysvsem&amp;#39; &amp;#39;--enable-inline-optimization&amp;#39; &amp;#39;--disable-rpath&amp;#39; &amp;#39;--enable-safe-mode&amp;#39; &amp;#39;--with-mysql=mysqlnd&amp;#39; &amp;#39;--with-mysqli=mysqlnd&amp;#39; &amp;#39;--with-pdo-mysql=mysqlnd&amp;#39; &amp;#39;--with-libxml-dir=/usr/local&amp;#39; &amp;#39;--enable-xml=/usr/local&amp;#39; &amp;#39;--with-openssl&amp;#39; --with-zlib &amp;#39;--enable-bcmath&amp;#39; &amp;#39;--with-bz2&amp;#39; &amp;#39;--enable-zip&amp;#39; &amp;#39;--enable-exif&amp;#39; &amp;#39;--with-gd&amp;#39; &amp;#39;--enable-gd-native-ttf&amp;#39; &amp;#39;--with-freetype-dir=/usr/local&amp;#39; &amp;#39;--with-jpeg-dir=/usr/local&amp;#39; &amp;#39;--with-png-dir&amp;#39; &amp;#39;--with-mhash&amp;#39; &amp;#39;--with-mcrypt=/usr/local&amp;#39; &amp;#39;--enable-mbstring&amp;#39; &amp;#39;--enable-mbregex&amp;#39; &amp;#39;--with-iconv-dir=/usr/local&amp;#39; &amp;#39;--with-curl&amp;#39; &amp;#39;--with-curlwrappers&amp;#39; &amp;#39;--enable-ftp&amp;#39; &amp;#39;--enable-sockets&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;3. mysql&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    cmake -DCMAKE_INSTALL_PREFIX=/opt/mysql/ -DSYSCONFDIR=/etc/my.cnf -DMYSQL_UNIX_ADDR=/opt/mysql/tmp/mysqld.sock -DMYSQL_USER=mysql -DDEFAULT_CHARSET=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ZLIB=/usr/local/lib/ -DWITH_READLINE=1 -DWITH_DATADIR=/opt/mysql/data/ -DWITH_SSL=bundled -DENABLED_LOCAL_INFILE=1-DWITH_READLINE=1 -DWITH_DEBUG=0

    make &amp;amp;&amp;amp; make install
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. wordpress安装&lt;/h3&gt;
&lt;p&gt;略&lt;/p&gt;
&lt;h3&gt;5. 配置&lt;/h3&gt;
&lt;p&gt;这次遇到麻烦的地方主要有三点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mysql初始化&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scripts/mysql_install_db --user mysql --basedir= --datadir=
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mysql设置密码需要先执行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set old_passwords = 0;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nginx重写规则&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;if (-f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;request_filename&lt;/span&gt;&lt;span class="x"&gt;/index.html)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    rewrite (.*) &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;1/index.html break;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;if (-f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;request_filename&lt;/span&gt;&lt;span class="x"&gt;/index.php)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    rewrite (.*) &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;1/index.php;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;span class="x"&gt;if (!-f &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;request_filename&lt;/span&gt;&lt;span class="x"&gt;)&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    rewrite (.*) /index.php;&lt;/span&gt;
&lt;span class="x"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样访问目录时就会自动访问下面的index.php了。&lt;/p&gt;</summary><category term="nginx"></category><category term="wordpress"></category></entry><entry><title>sublime插件安装</title><link href="blog/yun-wei/2016-03-22-18-26.html" rel="alternate"></link><updated>2016-03-22T18:26:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-18-26.html</id><summary type="html">&lt;p&gt;&lt;em&gt;使用Package Control组件，在sublime3下安装插件，按照网上方法会出现urllib2模块找不到的报错，但是之前并没出现过错误，查看了下之前是使用的urllib，在此记录下。&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;简单说下导入步骤：&lt;/h2&gt;
&lt;h3&gt;1. `ctrl + ``键，呼出命令行，键入命令:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;installed_packages_path&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProxyHandler&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://sublime.wbond.net/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;2. &lt;code&gt;ctrl+shift+p&lt;/code&gt; 呼出下拉对话框，输入&lt;code&gt;install&lt;/code&gt;会调出插件安装界面，输入要安装插件的名字就可以自动安装了。&lt;/h3&gt;</summary><category term="编辑器"></category></entry><entry><title>VIM插件安装</title><link href="blog/yun-wei/2016-03-22-18-15.html" rel="alternate"></link><updated>2016-03-22T18:15:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-18-15.html</id><summary type="html">&lt;h2&gt;vim ide 基本配置&lt;/h2&gt;
&lt;h3&gt;一、安装VIM&lt;/h3&gt;
&lt;p&gt;只是记录下vim的编译选项&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;--with-features=huge 一定要加&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --prefix=/usr/local/vim74 \
     **--with-features=huge** \
     --enable-pythoninterp --enable-perlinterp \
     --enable-rubyinterp --enable-luainterp \
     --enable-multibyte --enable-sniff --enable-fontset \
     --disable-selinux --enable-cscope
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;二、插件安装&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=1213"&gt;VJDE&lt;/a&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tar -xzf vjde.tgz -C /usr/share/vim/vimfiles 
chmod +x /usr/share/vim/vimfiles/plugin/vjde/readtags
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用官网的方法就可以，自己编译安装的vim就解压到 &lt;code&gt;/usr/local/vim/share/vim/vim74/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;括号自动补全插件&lt;a href="http//www.vim.org/scripts/script.php?script_id=3599"&gt;AutoPairs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载AutoPairs插件&lt;/p&gt;
&lt;p&gt;解压auto_pairs.vim到~/.vim/Plugin/目录下即可&lt;/p&gt;</summary><category term="编辑器"></category></entry><entry><title>storm 基本安装</title><link href="blog/yun-wei/2016-03-22-18-09.html" rel="alternate"></link><updated>2016-03-22T18:09:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-18-09.html</id><summary type="html">&lt;h3&gt;storm安装步骤:&lt;/h3&gt;
&lt;h4&gt;一、安装zookeeper&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;全部选用CDH的产品，不用担心版本问题，省心。
包都在这里:http://archive.cloudera.com/cdh4/cdh/4/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置zookeeper
解压稍微修改配置就可以使用，只需要定义dataDir和server.1/2/3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dataDir=/data/zookeeper/tmp
hostname1:2888:3888
hostname2:2888:3888
hostname3:2888:3888
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动
        ./zkServer.sh start&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;二、安装消息队列ZeroMQ&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;直接上最新版本zeromq-4.0.3&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;http://download.zeromq.org/zeromq-4.0.3.tar.gz
编译安装:&lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install &amp;amp;&amp;amp; ldconfig&lt;/code&gt;
不要忘记&lt;code&gt;ldconfig&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装zemq&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;https://github.com/zeromq/jzmq
编译安装:&lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install &amp;amp;&amp;amp; ldconfig&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;两个模块都默认安装/usr/local/了，这样storm就不用单独配置java.library.path了&lt;/p&gt;
&lt;h4&gt;三、安装storm&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;storm需要python2.6以上版本。安装略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;storm配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;storm.zookeeper.servers: 需要指定zookeeper集群ip 
storm.local.dir:本地目录位置
storm.zookeeper.root:zookeeper根目录
nimbus.host: &amp;quot;IP&amp;quot; 
worker.childopts:&amp;quot;-Xmx    m&amp;quot; 
ui.port: 8080
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动storm&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ui的机器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./storm nimbus &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;work&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./storm supervisor &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ui&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./storm ui &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要注意的是,RELEASE文件时必须的,否则启动会报错&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;only be run from with in a release&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="storm"></category></entry><entry><title>Zsh安装配置</title><link href="blog/yun-wei/2016-03-22-16-56.html" rel="alternate"></link><updated>2016-03-22T17:05:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-16-56.html</id><summary type="html">&lt;h2&gt;zsh是个好东西，关键是能装逼&lt;/h2&gt;
&lt;h3&gt;一、安装zsh&lt;/h3&gt;
&lt;p&gt;略&lt;/p&gt;
&lt;h4&gt;二、切换用户使用shell&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    usermod -s /usr/local/bin/zsh root
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;或者&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    chsh -s /bin/zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;三、git安装&lt;/h4&gt;
&lt;p&gt;没啥好说的，官网步骤都有&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel -y
    make prefix=/usr/local all
    make prefix=/usr/local install
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;四、安装python2.7.x&lt;/h4&gt;
&lt;p&gt;老三步&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ./configure --prefix=/usr/local/python2.7.11 --with-ensurepip=yes --disable-ipv6 --with-threads --with-pymalloc --with-fpectl
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;五、下载安装oh-my-zsh&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;github地址：https://github.com/robbyrussell/oh-my-zsh&lt;/li&gt;
&lt;li&gt;解压后 mv 到/root/目录下改名为.oh-my-zsh&lt;/li&gt;
&lt;li&gt;cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;改了小部分配置：
zshrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;plugins=(git osx autojump cp history systemadmin mvn screen)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;themes/robbyrussell.zsh-theme&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;PROMPT=&amp;#39;%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg_bold&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;`hostname` %&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg_bold&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;cyan&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;-&amp;gt;&lt;/span&gt;
&lt;span class="x"&gt;%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg_bold&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;green&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;%p%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;yellow&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;%c&lt;/span&gt;
&lt;span class="x"&gt;%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg_bold&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;cyan&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;$(git_prompt_info)%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$fg_bold&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;cyan&lt;/span&gt;&lt;span class="o"&gt;]%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;%&lt;/span&gt;
&lt;span class="x"&gt;%&lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$reset_color&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装autojump
直接./install 安装
.zshrc添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[[ -s /etc/profile.d/autojump.zsh ]] &amp;amp;&amp;amp; . /etc/profile.d/autojump.zsh
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;六、zsh使用&lt;/h4&gt;
&lt;p&gt;直接引用MacTalk-池建强大神的介绍
1. 兼容 bash，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智能拼写纠正，输入&lt;code&gt;gtep mactalk&lt;/code&gt; # -R，系统会提示：&lt;code&gt;zsh: correct ‘gtep’ to ‘grep’ [nyae]?&lt;/code&gt; 比妹纸贴心吧，她们向来都是让你猜的……&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各种补全：路径补全、命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;智能跳转，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在当前目录下输入 &lt;code&gt;..&lt;/code&gt; 或&lt;code&gt;…&lt;/code&gt;，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通配符搜索：ls -l ##/#.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="bash"></category><category term="编辑器"></category></entry><entry><title>vsftpd 虚拟用户配置</title><link href="blog/yun-wei/2016-03-22-16-12.html" rel="alternate"></link><updated>2016-03-22T16:25:00+08:00</updated><author><name>Hir0C</name></author><id>tag:,2016-03-22:blog/yun-wei/2016-03-22-16-12.html</id><summary type="html">&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;ftp 虚拟用户配置&lt;/p&gt;
&lt;h3&gt;配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建nologin用户&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;useradd -s /sbin/nologin -d /opt/ftp vftp
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建虚拟用户密码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;db_load -T -t hash -f vftpusers.txt /mnt/vftpusers.db
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加pam认证
/etc/pam.d/vsftpd起始两行添加：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auth sufficient /lib64/security/pam_userdb.so db=vftpusers
account sufficient /lib64/security/pam_userdb.so db=vftpusers
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改ftp配置(使用主动模式)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;port_enable=YES
write_enable=YES
connect_from_port_20=YES
anonymous_enable=NO
local_enable=YES
local_umask=022
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_file=/var/log/vsftpd.log
xferlog_std_format=YES
ascii_upload_enable=YES
ascii_download_enable=YES
listen=YES
chroot_local_user=YES
guest_enable=YES
guest_username=vftpusers
pam_service_name=vsftpd
user_config_dir=vftpusers_conf
virtual_use_local_privs=YES
use_localtime=YES
cmds_allowed=ABOR,CWD,LIST,MDTM,MKD,NLST,PASS,PASV,PORT,PWD,QUIT,RETR,RNFR,RNTO,SIZE,STOR,TYPE,USER,REST,CDUP,HELP,MODE,NOOP,REIN,STAT,STOU,STRU,SYST,FEAT
file_open_mode=0444
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重启vsftpd，登陆验证。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary><category term="运维"></category><category term="vsftpd"></category></entry></feed>